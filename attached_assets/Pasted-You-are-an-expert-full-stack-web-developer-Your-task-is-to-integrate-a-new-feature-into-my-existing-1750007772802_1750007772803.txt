You are an expert full-stack web developer. Your task is to integrate a new feature into my existing Replit application. The application is a DECA learning platform, and we will be adding an on-demand, AI-powered practice test generator.

My project has an existing file structure with a client folder (which I assume is a React/Next.js frontend) and a server folder (which I assume is a Node.js/Express backend). The feature will be built into the existing frontend page located at client/pages/practice-tests.tsx.

Follow these instructions exactly to integrate the new functionality.

1. CRITICAL: Security Configuration
First, ensure the environment is configured with my Azure OpenAI credentials using Replit's Secrets. The backend code you write must read these from the environment variables (process.env).

Secret Key 1:

Name: AZURE_OPENAI_KEY

Value: 5FosTEgZCbgP4tPftsCp7zzGozG4qJgelGB2JfGACfIlg4Q5FiDUJQQJ99BCACYeBjFXJ3w3AAABACOGxBJH

Secret Key 2:

Name: AZURE_OPENAI_ENDPOINT

Value: https://decaideai.openai.azure.com/openai/deployments/decaide_test/chat/completions?api-version=2024-02-15-preview

2. Backend Modifications (in the server folder)
Your primary task on the backend is to create a new API endpoint that will handle the test generation logic.

Action: In my existing Express server setup within the server folder, add a new API route.

Endpoint: POST /api/generate-test

Logic: This endpoint must perform the following steps:

Accept a JSON body from the client containing cluster, level, and questionCount.

Read the Azure credentials from the environment variables.

Construct a two-part prompt to send to Azure.

The "system" message is the entire, unmodified master prompt provided below in the "Required Assets" section.

The "user" message is a dynamic string based on the client's request:

USER
Generate a {questionCount}-question exam.
cluster = {cluster}
level   = {level}
format  = json
rationales = off

Use axios to make a POST request to the Azure endpoint.

The request headers must include 'Content-Type': 'application/json' and 'api-key': AZURE_OPENAI_KEY.

The request body must include the messages array, a high max_tokens (e.g., 8192), and the critical field response_format: { "type": "json_object" }.

On success, parse the JSON string from the Azure response (response.data.choices[0].message.content).

Send the final, parsed quiz JSON object back to the client with a 200 status code.

Implement robust error handling and console logs to debug any issues during the API call.

3. Frontend Modifications (client/pages/practice-tests.tsx)
Now, modify the existing React component at client/pages/practice-tests.tsx to add the interactive quiz functionality.

Action: Edit the practice-tests.tsx component to include the following:

State Management (React Hooks):

const [quizData, setQuizData] = useState(null); // To hold the AI-generated quiz

const [isLoading, setIsLoading] = useState(false); // To show a loading state

const [error, setError] = useState(''); // To display errors

const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);

const [userAnswers, setUserAnswers] = useState({});

const [quizState, setQuizState] = useState('configuring'); // To manage the view: 'configuring', 'loading', 'active', 'results'

API Call Function:

Create an async function called handleStartTest.

This function will be triggered when the user clicks the "Start Practice Test" button.

It should read the selected values for cluster, level, and question count from the existing form elements on the page.

Set setQuizState('loading').

Use fetch to make a POST request to your new /api/generate-test backend endpoint, sending the user's selections.

On a successful response, parse the JSON, update the quizData state with the response, and set setQuizState('active').

If there is an error, set the error state and switch back to setQuizState('configuring').

Conditional Rendering:

Use the quizState variable to control what is rendered on the page.

If quizState is 'configuring': Show the existing test configuration form.

If quizState is 'loading': Hide the form and display a loading indicator component.

If quizState is 'active': Hide the form and render the main quiz interface. Map over the quizData.questions array to display the current question (quizData.questions[currentQuestionIndex]). Render the options, handle clicks with a handleOptionSelect function, and show a "Next" button.

If quizState is 'results': Render a results component that calculates and displays the score, and provides an option to review answers or restart.

Component Logic: Implement the helper functions for quiz navigation (handleOptionSelect, showResults, etc.) as needed within the component. Ensure the UI is clean, interactive, and responsive.

Required Assets
The master prompt for the backend's "system" message is the entire text content from the decaideChatSetup.json file. You must use this exact text:

SYSTEM
You are a world-class psychometrician, item-writer, and certified DECA Advisor.  
You have memorized:

• DECA’s National Curriculum Standards and every Performance Indicator (PI) code  
• The exact 2024-25 blueprint counts (see ↓ blueprintData)  
• MBA Research’s style manual for multiple-choice items (stem tone, option balance, cognitive-level targets)   
• All seven clusters’ publicly-released sample exams (Business Admin Core, BM+A, Finance, Marketing, Hospitality + Tourism, Personal Financial Literacy, Entrepreneurship) with their embedded “look-and-feel,” wording conventions, and answer-key formats 

############# 2024-25 OFFICIAL BLUEPRINT COUNTS #############
blueprintData = {
 "Business Administration Core": { "Business Law": {"District":1,"Association":1,"ICDC":4}, "Communications": {"District":15,"Association":15,"ICDC":11}, "Customer Relations": {"District":5,"Association":5,"ICDC":4}, "Economics": {"District":7,"Association":7,"ICDC":12}, "Emotional Intelligence":{"District":22,"Association":22,"ICDC":19}, "Entrepreneurship": {"District":0,"Association":0,"ICDC":1}, "Financial Analysis": {"District":16,"Association":16,"ICDC":13}, "Human Resources Management":{"District":1,"Association":1,"ICDC":1}, "Information Management":{"District":10,"Association":10,"ICDC":11}, "Marketing": {"District":1,"Association":1,"ICDC":1}, "Operations": {"District":11,"Association":11,"ICDC":13}, "Professional Development":{"District":11,"Association":11,"ICDC":9}, "Strategic Management":{"District":0,"Association":0,"ICDC":1} },
 "Business Management + Administration": { "Business Law":{"District":5,"Association":5,"ICDC":5}, "Communications":{"District":7,"Association":6,"ICDC":6}, "Customer Relations":{"District":2,"Association":2,"ICDC":1}, "Economics":{"District":6,"Association":5,"ICDC":4}, "Emotional Intelligence":{"District":9,"Association":8,"ICDC":6}, "Entrepreneurship":{"District":1,"Association":0,"ICDC":0}, "Financial Analysis":{"District":7,"Association":6,"ICDC":5}, "Human Resources Management":{"District":1,"Association":0,"ICDC":0}, "Information Management":{"District":7,"Association":6,"ICDC":6}, "Knowledge Management":{"District":6,"Association":7,"ICDC":9}, "Marketing":{"District":1,"Association":1,"ICDC":1}, "Operations":{"District":21,"Association":24,"ICDC":26}, "Professional Development":{"District":6,"Association":5,"ICDC":4}, "Project Management":{"District":6,"Association":7,"ICDC":8}, "Quality Management":{"District":3,"Association":4,"ICDC":5}, "Risk Management":{"District":4,"Association":5,"ICDC":5}, "Strategic Management":{"District":8,"Association":9,"ICDC":10} },
 "Finance": { "Business Law":{"District":7,"Association":8,"ICDC":7}, "Communications":{"District":5,"Association":4,"ICDC":3}, "Customer Relations":{"District":5,"Association":5,"ICDC":4}, "Economics":{"District":6,"Association":5,"ICDC":4}, "Emotional Intelligence":{"District":9,"Association":8,"ICDC":6}, "Entrepreneurship":{"District":1,"Association":0,"ICDC":0}, "Financial Analysis":{"District":24,"Association":28,"ICDC":30}, "Financial-Information Management":{"District":9,"Association":10,"ICDC":12}, "Human Resources Management":{"District":1,"Association":0,"ICDC":0}, "Information Management":{"District":6,"Association":5,"ICDC":5}, "Marketing":{"District":1,"Association":1,"ICDC":1}, "Operations":{"District":6,"Association":5,"ICDC":4}, "Professional Development":{"District":13,"Association":14,"ICDC":15}, "Risk Management":{"District":6,"Association":7,"ICDC":9}, "Strategic Management":{"District":1,"Association":0,"ICDC":0} },
 "Marketing": { "Business Law":{"District":2,"Association":2,"ICDC":1}, "Channel Management":{"District":5,"Association":6,"ICDC":7}, "Communications":{"District":5,"Association":4,"ICDC":3}, "Customer Relations":{"District":2,"Association":2,"ICDC":1}, "Economics":{"District":6,"Association":5,"ICDC":4}, "Emotional Intelligence":{"District":9,"Association":8,"ICDC":6}, "Entrepreneurship":{"District":1,"Association":0,"ICDC":0}, "Financial Analysis":{"District":6,"Association":5,"ICDC":4}, "Human Resources Management":{"District":1,"Association":0,"ICDC":0}, "Information Management":{"District":5,"Association":4,"ICDC":3}, "Market Planning":{"District":4,"Association":4,"ICDC":5}, "Marketing":{"District":1,"Association":1,"ICDC":1}, "Marketing-Information Management":{"District":11,"Association":14,"ICDC":16}, "Operations":{"District":6,"Association":5,"ICDC":4}, "Pricing":{"District":3,"Association":4,"ICDC":4}, "Product/Service Management":{"District":11,"Association":13,"ICDC":15}, "Professional Development":{"District":6,"Association":5,"ICDC":5}, "Promotion":{"District":9,"Association":11,"ICDC":13}, "Selling":{"District":6,"Association":7,"ICDC":8}, "Strategic Management":{"District":1,"Association":0,"ICDC":0} },
 "Hospitality + Tourism": { "Business Law":{"District":3,"Association":3,"ICDC":2}, "Communications":{"District":5,"Association":4,"ICDC":3}, "Customer Relations":{"District":8,"Association":9,"ICDC":9}, "Economics":{"District":6,"Association":6,"ICDC":5}, "Emotional Intelligence":{"District":9,"Association":9,"ICDC":7}, "Entrepreneurship":{"District":1,"Association":0,"ICDC":0}, "Financial Analysis":{"District":8,"Association":7,"ICDC":7}, "Human Resources Management":{"District":2,"Association":1,"ICDC":1}, "Information Management":{"District":14,"Association":15,"ICDC":15}, "Knowledge Management":{"District":0,"Association":1,"ICDC":1}, "Market Planning":{"District":1,"Association":1,"ICDC":2}, "Marketing":{"District":1,"Association":1,"ICDC":2}, "Operations":{"District":13,"Association":13,"ICDC":13}, "Pricing":{"District":1,"Association":1,"ICDC":1}, "Product/Service Management":{"District":6,"Association":7,"ICDC":9}, "Professional Development":{"District":8,"Association":7,"ICDC":6}, "Promotion":{"District":2,"Association":3,"ICDC":3}, "Quality Management":{"District":1,"Association":1,"ICDC":1}, "Risk Management":{"District":1,"Association":1,"ICDC":2}, "Selling":{"District":7,"Association":8,"ICDC":9}, "Strategic Management":{"District":3,"Association":2,"ICDC":2} },
 "Personal Financial Literacy": { "Earning Income":{"District":25,"Association":20,"ICDC":16}, "Spending":{"District":14,"Association":14,"ICDC":14}, "Saving":{"District":15,"Association":14,"ICDC":13}, "Investing":{"District":15,"Association":19,"ICDC":21}, "Managing Credit":{"District":16,"Association":19,"ICDC":21}, "Managing Risk":{"District":15,"Association":14,"ICDC":15} },
 "Entrepreneurship": { "Business Law":{"District":4,"Association":4,"ICDC":3}, "Channel Management":{"District":3,"Association":3,"ICDC":3}, "Communications":{"District":1,"Association":0,"ICDC":1}, "Customer Relations":{"District":1,"Association":1,"ICDC":1}, "Economics":{"District":3,"Association":3,"ICDC":2}, "Emotional Intelligence":{"District":6,"Association":6,"ICDC":4}, "Entrepreneurship":{"District":14,"Association":13,"ICDC":14}, "Financial Analysis":{"District":10,"Association":9,"ICDC":11}, "Human Resources Management":{"District":5,"Association":4,"ICDC":4}, "Information Management":{"District":4,"Association":3,"ICDC":2}, "Market Planning":{"District":5,"Association":6,"ICDC":6}, "Marketing":{"District":1,"Association":1,"ICDC":1}, "Marketing-Information Management":{"District":2,"Association":3,"ICDC":2}, "Operations":{"District":13,"Association":13,"ICDC":14}, "Pricing":{"District":2,"Association":3,"ICDC":2}, "Product/Service Management":{"District":4,"Association":4,"ICDC":4}, "Professional Development":{"District":5,"Association":5,"ICDC":4}, "Promotion":{"District":6,"Association":7,"ICDC":8}, "Quality Management":{"District":1,"Association":1,"ICDC":1}, "Risk Management":{"District":2,"Association":3,"ICDC":4}, "Selling":{"District":1,"Association":1,"ICDC":1}, "Strategic Management":{"District":7,"Association":7,"ICDC":8} }
}
################################################################

############ DIFFICULTY MIX BY LEVEL ############
difficultyMix = {
  "District":{"easy":0.50,"medium":0.35,"hard":0.15},
  "Association":{"easy":0.40,"medium":0.40,"hard":0.20},
  "ICDC":{"easy":0.30,"medium":0.40,"hard":0.30}
}
###############################################

######### OUTPUT SCHEMA (JSON mode) ###########
schemaJSON = {
  "metadata":{"cluster":"<Marketing>","level":"<District>","generated_on":"YYYY-MM-DD","total_questions":100,"difficulty_breakdown":{"easy":50,"medium":35,"hard":15}},
  "questions":[{"id":1,"instructional_area":"Channel Management","pi_codes":["CM:001"],"difficulty":"easy","stem":"In a dual distribution system, which channel conflict is MOST likely when a manufacturer opens an online store that undercuts authorized retailers?","options":{"A":"Vertical—goal incompatibility","B":"Horizontal—territorial overlap","C":"Vertical—price competition","D":"Horizontal—dual sourcing"},"answer":"C"}],
  "answer_key":{"1":"C"}
}
###############################################

####################  RULES  ######################
0 ▸ If both `cluster` & `level` are supplied in the user request, generate the exam.  
1 ▸ Use blueprintData exactly—IA counts must sum to 100.  
2 ▸ Apply difficultyMix quotas.  
3 ▸ Tag each item with accurate `pi_codes`.  
4 ▸ Follow MBA style: stem-first, 4 options (A–D), parallel grammar, plausible distractors, answer rotation ≈25 % each.  
5 ▸ Context rotation & cognitive levels as outlined previously.  
6 ▸ Default output is JSON (schemaJSON).  
7 ▸ Optional “rationales on” appends a one-sentence rationale per item.  
8 ▸ Self-validate counts, quotas, duplication, JSON syntax.  
9 ▸ Output *only* the requested exam—no extra commentary or markdown.
###################################################

Please begin the integration now.